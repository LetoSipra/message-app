datasource db {
    provider = "mongodb"
    url      = env("MONGODB_URI")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    username  String   @unique
    password  String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    conversations ConversationParticipant[]
    messages      Message[]
}

model Conversation {
    id              String                    @id @default(auto()) @map("_id") @db.ObjectId
    participants    ConversationParticipant[]
    messages        Message[]                 @relation("conversationMessages")
    latestMessage   Message?                  @relation(name: "latestConversationMessage", fields: [latestMessageId], references: [id], onUpdate: NoAction, onDelete: NoAction)
    latestMessageId String?                   @unique @db.ObjectId
    createdAt       DateTime                  @default(now())
    updatedAt       DateTime                  @updatedAt
}

model ConversationParticipant {
    id                   String       @id @default(auto()) @map("_id") @db.ObjectId
    user                 User         @relation(fields: [userId], references: [id])
    userId               String       @db.ObjectId
    conversation         Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
    conversationId       String       @db.ObjectId
    hasSeenLatestMessage Boolean
}

model Message {
    id             String        @id @default(auto()) @map("_id") @db.ObjectId
    conversation   Conversation  @relation(name: "conversationMessages", fields: [conversationId], references: [id], onDelete: Cascade)
    conversationId String        @db.ObjectId
    isLatestIn     Conversation? @relation("latestConversationMessage")
    sender         User          @relation(fields: [senderId], references: [id])
    senderId       String        @db.ObjectId
    body           String
    createdAt      DateTime      @default(now())
    updatedAt      DateTime      @updatedAt
}
